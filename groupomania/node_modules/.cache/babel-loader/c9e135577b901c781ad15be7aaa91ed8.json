{"remainingRequest":"C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\src\\components\\Forum.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\src\\components\\Forum.vue","mtime":1622106699908},{"path":"C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AKILA\\Desktop\\MON ANCIEN BUREAU\\SAVE PC\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\projet7\\groupomaniaProjet\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0FLSUxBL0Rlc2t0b3AvTU9OIEFOQ0lFTiBCVVJFQVUvU0FWRSBQQy9PbmVEcml2ZS9CdXJlYXUvUHJvamV0c09wZW5jbGFzc3Jvb21zL1Byb2pldCA3IHRlc3QvcHJvamV0Ny9ncm91cG9tYW5pYVByb2pldC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiQzovVXNlcnMvQUtJTEEvRGVza3RvcC9NT04gQU5DSUVOIEJVUkVBVS9TQVZFIFBDL09uZURyaXZlL0J1cmVhdS9Qcm9qZXRzT3BlbmNsYXNzcm9vbXMvUHJvamV0IDcgdGVzdC9wcm9qZXQ3L2dyb3Vwb21hbmlhUHJvamV0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBGb3JtRGF0YSBmcm9tICdmb3JtLWRhdGEnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZvcnVtJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZG9ubmVlc1RleHQ6IHsKICAgICAgICBpbWc6ICIiLAogICAgICAgIG1lc3NhZ2U6ICIiCiAgICAgIH0sCiAgICAgIGNvbW1lbnQ6ICIiLAogICAgICBtZXNzYWdlUG9zdDogIiIsCiAgICAgIG1lZGlhUG9zdDogIiIsCiAgICAgIGRhdGVQb3N0OiAiIiwKICAgICAgcmVwZWF0OiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZFBvc3Q6IGZ1bmN0aW9uIGFkZFBvc3QoZSkgewogICAgICAvL2VkaXRlciB1biBwb3N0ICBlZGl0UG9zdAogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICB2YXIgaW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BpY3R1cmUnKS5maWxlc1swXTsgLy8gbWV0aG9kZSBmb25jdGlvbm5lIGxlIHNldWwgcHJvYmzDqG1lIGVzdCBsJ2FmZmljaGFnZSBkZXMgaW1hZ2VzCgogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3BpY3R1cmUnLCBpbWcpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ21lc3NhZ2UnLCB0aGlzLm1lc3NhZ2UpOyAvL2NvbnNvbGUubG9nKC4uLmZvcm1EYXRhKTsKCiAgICAgIGNvbnNvbGUubG9nKGltZyk7CiAgICAgIHZhciBtb25PYmpldCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykpOwogICAgICB2YXIgYXV0aCA9ICdiZWFyZXInICsgIiAiICsgbW9uT2JqZXQudG9rZW47CiAgICAgIGNvbnNvbGUubG9nKGF1dGgpOwogICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjMwMzAvYXBpL3Bvc3QiLCBmb3JtRGF0YSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsCiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGF1dGgKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIGNvbnNvbGUubG9nKGF1dGgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICB0aGlzLm91dHB1dCA9IGVycm9yOwogICAgICB9KTsKICAgIH0sCiAgICAvL2xhIHJvdXRlIHBvc3Qgc2UgZmFpdCBtYWlzIGxhIGZvbmN0aW9uIHMnYXBwZWxsZSBhdmFudCBsZSBjbGljLAogICAgLy8ganVzdGUgw6AgbCdpbml0aWFsaXNhdGlvbiBkZSBsYSBwYWdlCiAgICBmb3JtOiBmdW5jdGlvbiBmb3JtKCkgewogICAgICB2YXIgX2NvbnNvbGU7CgogICAgICB2YXIgcGFyYW1zID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIHBhcmFtcy5hcHBlbmQoJ21lc3NhZ2UnLCB0aGlzLmNvbW1lbnQpOwogICAgICBwYXJhbXMuYXBwZW5kKCdwb3N0SWQnLCB0aGlzLmlkKTsKCiAgICAgIChfY29uc29sZSA9IGNvbnNvbGUpLmxvZy5hcHBseShfY29uc29sZSwgX3RvQ29uc3VtYWJsZUFycmF5KHBhcmFtcykpOyAvL29uIHbDqXJpZmllIHF1ZSBsYSBjb25zdGF0ZSBwYXJhbXMgY29udGllbnQgYmllIHRoaXMuY29tbWVudAoKCiAgICAgIHZhciBtb25PYmpldCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykpOwogICAgICBjb25zb2xlLmxvZyhtb25PYmpldCk7CiAgICAgIHZhciBhdXRoID0gJ2JlYXJlcicgKyAiICIgKyBtb25PYmpldC50b2tlbjsgLy9lcnJldXIgNDAxCiAgICAgIC8vb24gcsOpY3Vww6lyZSBsZSB0b2tlbiBxdWkgc2UgdHJvdXZlIGRhbnMgbGUgbG9jYWxzdG9yYWdlIHBvdXIgbCdhdXRoZW50aWZpY2F0aW9uCgogICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjMwMzAvYXBpL2NvbW1lbnQiLCBwYXJhbXMsIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnLAogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBhdXRoCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZygnb2sgb3Ugbm9uPycpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLnN0YXR1cyk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2Uuc3RhdHVzVGV4dCk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuaGVhZGVycyk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuY29uZmlnKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgdGhpcy5vdXRwdXQgPSBlcnJvcjsKICAgICAgfSk7CiAgICB9LAogICAgcG9zdHM6IGZ1bmN0aW9uIHBvc3RzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjMwMzAvYXBpL3Bvc3QiKSAvL29uIGNyw6llIHVuZSByb3V0ZSBnZXQKICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuaW5mbyA9IHJlc3BvbnNlLmRhdGE7IC8vb24gcsOpY3Vww6lyZSBsZSBjb3JwcyBkZSBsYSByZXF1w6p0ZQoKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoX3RoaXMuaW5mbyksCiAgICAgICAgICAgIF9zdGVwOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIGl0ZW0gPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgLy9sZXQgZm9ybXVtYWlyZSA9IHRoaXMubWV0aG9kcy5mb3JtOwogICAgICAgICAgICBfdGhpcy5tZXNzYWdlUG9zdCA9IGl0ZW0ubWVzc2FnZTsgLy9sJ2ltYWdlCgogICAgICAgICAgICBfdGhpcy5tZWRpYVBvc3QgPSBpdGVtLm1lZGlhOyAvL2xhIGRhdGUgZHUgcG9zdAoKICAgICAgICAgICAgX3RoaXMuZGF0ZVBvc3QgPSBpdGVtLmRhdGU7IC8vb24gdsOpcmlmaWUgcXVlIHRvdXQgZm9uY3Rpb25uZQoKICAgICAgICAgICAgdmFyIGlkID0gaXRlbS5pZDsKICAgICAgICAgICAgY29uc29sZS5sb2coaXRlbSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGlkKTsKICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMubWVzc2FnZVBvc3QpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5tZWRpYVBvc3QpOyAvL29uIHZhIGNyw6llciBkdSBjb250ZW51IGF1IGlkIGF1IGJsb2NQb3N0CiAgICAgICAgICAgIC8vbGUgYnV0IMOpdGFudCBkJ2FmZmljaGVyIHRvdXMgbGVzIHBvc3RzIHF1aSBvbnQgw6l0w6kgZW52b3nDqXMgw6AgbGEgYmFzZSBkZSBkb25uw6llcwogICAgICAgICAgICAvL3RoaXMucmVwZWF0ID0gdHJ1ZQoKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1lc3MiKS5pbm5lckhUTUwgKz0gIlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIuLi8uLi9hc3NldHMvdXNlci1jaXJjbGUtcmVndWxhci5wbmdcIiBhbHQ9XCJpY29uZVVzZXJcIiB0aXRsZT1cImljb25lVXNlclwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5OYW1lIG9mIFVzZXIiLmNvbmNhdChpZCwgIjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiZGF0ZVwiPiIpLmNvbmNhdChfdGhpcy5kYXRlUG9zdCwgIjwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3MgPVwiZGV0YWlsc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCJpbWFnZXMvIikuY29uY2F0KF90aGlzLm1lZGlhUG9zdCwgIlwiIGNsYXNzPVwiaW1nXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+IikuY29uY2F0KF90aGlzLm1lc3NhZ2VQb3N0LCAiPC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGZvcm0gc3R5bGU9IFwid2lkdGg6IDg1JTttYXJnaW46IDAgMTAlO2Rpc3BsYXk6IGZsZXg7YWxpZ24taXRlbXM6IGNlbnRlcjtmbGV4LWRpcmVjdGlvbjogY29sdW1uO1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJhbnN3ZXIgdG8gcG9zdFwiIHYtbW9kZWw9XCIiKS5jb25jYXQoX3RoaXMuY29tbWVudCwgIlwiIHN0eWxlPVwid2lkdGg6IC13ZWJraXQtZmlsbC1hdmFpbGFibGU7IGhlaWdodDogMTAwcHg7IG1hcmdpbi10b3A6MjBweDtib3gtc2hhZG93OiAycHggMnB4IDJlbSByZ2IoMCAwIDAgLyAxNiUpO2JvcmRlcjpub25lO1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgQGNsaWNrPVwiIikuY29uY2F0KF90aGlzLmZvcm0oKSwgIlwiPmVudm9pPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICAgICAgICAiKTsgLy/DoCBjaGFxdWUgdG91ciwgbGUgYmxvYyBtZXNzIGEgdGVsIGNvbnRlbnUsIGlsIGZhdXQgZW5zdWl0ZSBib3VjbGVyCiAgICAgICAgICAgIC8vZXQgw6AgY2hhcXVlIHRvdXIsIGxlIGZvcm11bGFpcmUgcydhZmZpY2hlcmEgw6AgbGEgc3VpdGUgZGUgbWVzcwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICB0aGlzLm91dHB1dCA9IGVycm9yOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnBvc3RzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Forum.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport axios from \"axios\"; \r\nimport FormData from 'form-data';\r\nexport default {\r\n\tname: 'Forum',\r\n    data() {\r\n      return {\r\n        donneesText : {\r\n            img: \"\",\r\n            message : \"\"\r\n        },\r\n        comment : \"\",\r\n        messagePost : \"\",\r\n        mediaPost : \"\",\r\n        datePost : \"\",\r\n        repeat: false\r\n      };\r\n    },\r\n    methods: {\r\n        addPost(e) {\r\n        //editer un post  editPost\r\n            e.preventDefault();\r\n            var formData = new FormData();\r\n            let img = document.getElementById('picture').files[0];\r\n            // methode fonctionne le seul problème est l'affichage des images\r\n            formData.append('picture', img);\r\n            formData.append('message', this.message);\r\n            //console.log(...formData);\r\n            console.log(img);\r\n            const monObjet = JSON.parse(localStorage.getItem('token'));\r\n\r\n            let auth = 'bearer' + \" \" + monObjet.token;\r\n            console.log(auth);\r\n            axios.post(\"http://localhost:3030/api/post\", formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': auth\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                console.log(auth);\r\n            })\r\n            .catch(function (error) {\r\n                this.output = error;\r\n            });\r\n        },\r\n        //la route post se fait mais la fonction s'appelle avant le clic,\r\n        // juste à l'initialisation de la page\r\n        form: function() {\r\n            const params = new FormData();\r\n            params.append('message', this.comment);\r\n            params.append('postId',this.id);\r\n            console.log(...params);\r\n            //on vérifie que la constate params contient bie this.comment\r\n            const monObjet = JSON.parse(localStorage.getItem('token'));\r\n            console.log(monObjet);\r\n            let auth = 'bearer' + \" \" + monObjet.token;\r\n            //erreur 401\r\n            //on récupére le token qui se trouve dans le localstorage pour l'authentification\r\n            axios.post(\"http://localhost:3030/api/comment\", params, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': auth\r\n                }\r\n            })\r\n            .then(()=> {\r\n                console.log('ok ou non?')\r\n            })\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                console.log(response.status);\r\n                console.log(response.statusText);\r\n                console.log(response.headers);\r\n                console.log(response.config);\r\n            })\r\n            .catch(function (error) {\r\n                this.output = error;\r\n            });\r\n        },\r\n        posts: function() {\r\n            axios.get(\"http://localhost:3030/api/post\")\r\n            //on crée une route get\r\n            .then(response => {\r\n            (this.info = response.data);\r\n                //on récupére le corps de la requête\r\n            for (let item of this.info) {\r\n                    //let formumaire = this.methods.form;\r\n                this.messagePost = item.message\r\n                    //l'image\r\n                this.mediaPost = item.media\r\n                    //la date du post\r\n                this.datePost = item.date\r\n                    //on vérifie que tout fonctionne\r\n                let id = item.id\r\n                console.log(item);\r\n                console.log(id);\r\n                console.log(this.messagePost);\r\n                console.log(this.mediaPost);\r\n                    //on va créer du contenu au id au blocPost\r\n                    //le but étant d'afficher tous les posts qui ont été envoyés à la base de données\r\n                    //this.repeat = true\r\n                document.getElementById(\"mess\").innerHTML+= `\r\n                    <div class=\"user\">\r\n                        <img src=\"../../assets/user-circle-regular.png\" alt=\"iconeUser\" title=\"iconeUser\" />\r\n                        <p>Name of User${id}</p>\r\n                        <p class=\"date\">${this.datePost}</p>\r\n                    </div>\r\n                    <div class =\"details\">\r\n                        <img src=\"images/${this.mediaPost}\" class=\"img\"/>\r\n                        <p>${this.messagePost}</p>\r\n                    </div>\r\n                    <form style= \"width: 85%;margin: 0 10%;display: flex;align-items: center;flex-direction: column;\">\r\n                        <input type=\"text\" placeholder=\"answer to post\" v-model=\"${this.comment}\" style=\"width: -webkit-fill-available; height: 100px; margin-top:20px;box-shadow: 2px 2px 2em rgb(0 0 0 / 16%);border:none;\">\r\n                        <button type=\"submit\" @click=\"${this.form()}\">envoi</button>\r\n                    </form>\r\n                `\r\n                        //à chaque tour, le bloc mess a tel contenu, il faut ensuite boucler\r\n                        //et à chaque tour, le formulaire s'affichera à la suite de mess\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                    this.output = error;\r\n            });\r\n        }\r\n    },\r\n    mounted :\r\n        function() {\r\n            this.posts();\r\n        }\r\n}\r\n</script>\r\n<template>\r\n  <div id=\"blocCentral\">\r\n    <div class=\"blocPost\">\r\n        <form enctype='multipart/form-data' style=\"margin:0; width:100%;\">\r\n            <input type=\"text\" placeholder=\"What's on your mind?\" v-model=\"message\" style=\"width: -webkit-fill-available; margin-top:20px;box-shadow: 2px 2px 2em rgb(0 0 0 / 16%);border:none;height: 200px;\">\r\n            <div class=\"iconePicture\"></div>\r\n            <input id=\"picture\" accept=\"image/*\" type=\"file\" style=\"position: relative;bottom: 30px;left: 40px;\">\r\n            <button type=\"button\" @click=\"addPost\" style=\"padding: 10px 12px;color: white;text-transform: uppercase;font-weight: bold;background-color: #ff5722;border: none;border-radius: 20px;\">Poster</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"posts\">\r\n        <div id=\"post\">\r\n            <div id=\"blocPost\">\r\n                <!--\r\n                    Le problème est que le formulaire ne s'affiche qu'une fois et l'on veux qu'il se répète à chaque fois qu'un bloc est crée\r\n                -->\r\n                <div id=\"mess\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.forum {\r\n    width: 75%;\r\n    margin-top: 40px;\r\n}\r\n.iconePicture {\r\n    content: url(\"../../assets/camera-retro-solid.png\");\r\n    width: 6%;\r\n    margin: 0 10px;\r\n}\r\n.blocPost {\r\n    width: 80%;\r\n    margin-left: 12%;\r\n    box-shadow: 2px 2px 2em;\r\n    input {\r\n        width: 95%;\r\n        border: none;\r\n        padding-left: 30px;\r\n    }\r\n    .moreOptions {\r\n        display: flex;\r\n        margin-top: 10px;\r\n        .iconePicture {\r\n            content: url(\"../../assets/camera-retro-solid.png\");\r\n            width: 2%;\r\n            height: 20px;\r\n        }\r\n        input {\r\n            padding: 0;\r\n        }\r\n        button {\r\n            padding: 8px;\r\n            color: white;\r\n            text-transform: uppercase;\r\n            font-weight: bold;\r\n            background-color: #ff5722;\r\n            border: none;\r\n            margin-left: auto;\r\n        }\r\n    }\r\n}\r\n.posts {\r\n    width: 85%;\r\n    margin: 0 10%;\r\n    box-shadow: 2px 2px 2em;\r\n    #post {\r\n        margin: 0 auto;\r\n        background-color: white;\r\n        #blockPost {\r\n            margin: 15px;\r\n            .user {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-around;\r\n                p {\r\n                    bottom: 10px;\r\n                }\r\n                p.date {\r\n                    margin-left: auto;\r\n                    margin-right: 10px;\r\n                }\r\n            }\r\n        }\r\n        .blocPost {\r\n            margin : 10px auto;\r\n        }\r\n        .details {\r\n            display: flex;\r\n            justify-content: space-around;\r\n        }\r\n        .img {\r\n            position: relative;\r\n            right: 15px;\r\n            bottom: 10px;\r\n            width: 15%;\r\n        }\r\n        button {\r\n            padding: 10px 12px;\r\n            color: white;\r\n            text-transform: uppercase;\r\n            font-weight: bold;\r\n            background-color: #ff5722;\r\n            border: none;\r\n            position: relative;\r\n            left: 42%;\r\n            top: 10px;\r\n            border-radius: 20px;\r\n        }\r\n    }\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}