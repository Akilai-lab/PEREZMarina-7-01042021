{"remainingRequest":"C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\src\\components\\HomeLink.vue?vue&type=template&id=b71b65ae&","dependencies":[{"path":"C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\src\\components\\HomeLink.vue","mtime":1617563820338},{"path":"C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\akila\\OneDrive\\Bureau\\ProjetsOpenclassrooms\\Projet 7 test\\groupomania\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiNzUlIiwgIm1hcmdpbi10b3AiOiAiNDBweCIgfSB9LCBbCiAgICBfdm0uX20oMCksCiAgICBfYygiZm9ybSIsIHsgYXR0cnM6IHsgbWV0aG9kOiAicG9zdCIgfSB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwgWwogICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAibGFzdE5hbWUiIH0gfSwgW192bS5fdigiTGFzdG5hbWUiKV0pLAogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0ubGFzdE5hbWUsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImxhc3ROYW1lIgogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgdHlwZTogInRleHQiLAogICAgICAgICAgICBuYW1lOiAibGFzdE5hbWUiLAogICAgICAgICAgICBpZDogImxhc3ROYW1lIiwKICAgICAgICAgICAgcmVxdWlyZWQ6ICIiCiAgICAgICAgICB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5sYXN0TmFtZSB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF92bS5sYXN0TmFtZSA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAiIH0sIFsKICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogIm5hbWUiIH0gfSwgW192bS5fdigiTmFtZSIpXSksCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgdmFsdWU6IF92bS5uYW1lLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJuYW1lIgogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiLCBuYW1lOiAibmFtZSIsIGlkOiAibmFtZSIsIHJlcXVpcmVkOiAiIiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5uYW1lIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX3ZtLm5hbWUgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KSwKICAgICAgICBfYygicCIsIFtfdm0uX3YoIkxlIG1lc3NhZ2UgZXN0IDogIiArIF92bS5fcyhfdm0ubmFtZSkpXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwgWwogICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAidXNlck5hbWUiIH0gfSwgW192bS5fdigiVXNlciBOYW1lIildKSwKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnVzZXJOYW1lLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ1c2VyTmFtZSIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgbmFtZTogInVzZXJOYW1lIiwKICAgICAgICAgICAgaWQ6ICJ1c2VyTmFtZSIsCiAgICAgICAgICAgIHJlcXVpcmVkOiAiIgogICAgICAgICAgfSwKICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0udXNlck5hbWUgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBfdm0udXNlck5hbWUgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJlbWFpbCIgfSB9LCBbX3ZtLl92KCJFLW1haWwiKV0pLAogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0uZW1haWwsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImVtYWlsIgogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgYXR0cnM6IHsgdHlwZTogImVtYWlsIiwgbmFtZTogIm1haWwiLCBpZDogImVtYWlsIiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5lbWFpbCB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF92bS5lbWFpbCA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAiIH0sIFsKICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogInBhc3N3b3JkIiB9IH0sIFtfdm0uX3YoIlBhc3N3b3JkIildKSwKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBhc3N3b3JkLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJwYXNzd29yZCIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHR5cGU6ICJwYXNzd29yZCIsCiAgICAgICAgICAgIG5hbWU6ICJwYXNzd29yZCIsCiAgICAgICAgICAgIGlkOiAicGFzc3dvcmQiLAogICAgICAgICAgICByZXF1aXJlZDogIiIKICAgICAgICAgIH0sCiAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnBhc3N3b3JkIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX3ZtLnBhc3N3b3JkID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICBzdGF0aWNDbGFzczogInN1Ym1pdCIsCiAgICAgICAgYXR0cnM6IHsgdHlwZTogInN1Ym1pdCIsIHZhbHVlOiAicydpbnNjcmlyZSIgfQogICAgICB9KQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBhdHRyczogeyBpZDogImJhbm5pZXJlIiB9IH0sIFsKICAgICAgX2MoImgxIiwgW192bS5fdigiTm91cyByZWpvaW5kcmUiKV0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRyaWFuZ2xlIiB9KQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}